#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom15_FinalProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyKhachSan")]
	public partial class QuanLyKhachSanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcommune(commune instance);
    partial void Updatecommune(commune instance);
    partial void Deletecommune(commune instance);
    partial void InsertThuePhong(ThuePhong instance);
    partial void UpdateThuePhong(ThuePhong instance);
    partial void DeleteThuePhong(ThuePhong instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void Insertdistrict(district instance);
    partial void Updatedistrict(district instance);
    partial void Deletedistrict(district instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void Insertprovince(province instance);
    partial void Updateprovince(province instance);
    partial void Deleteprovince(province instance);
    partial void InsertSuDungDichVu(SuDungDichVu instance);
    partial void UpdateSuDungDichVu(SuDungDichVu instance);
    partial void DeleteSuDungDichVu(SuDungDichVu instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    #endregion
		
		public QuanLyKhachSanDataContext() : 
				base(global::Nhom15_FinalProject.Properties.Settings.Default.QuanLyKhachSanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhachSanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhachSanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhachSanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyKhachSanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<commune> communes
		{
			get
			{
				return this.GetTable<commune>();
			}
		}
		
		public System.Data.Linq.Table<ThuePhong> ThuePhongs
		{
			get
			{
				return this.GetTable<ThuePhong>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<district> districts
		{
			get
			{
				return this.GetTable<district>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<province> provinces
		{
			get
			{
				return this.GetTable<province>();
			}
		}
		
		public System.Data.Linq.Table<SuDungDichVu> SuDungDichVus
		{
			get
			{
				return this.GetTable<SuDungDichVu>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.commune")]
	public partial class commune : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _commune_id;
		
		private string _commune_name;
		
		private System.Nullable<int> _degree;
		
		private string _district_id;
		
		private EntitySet<KhachHang> _KhachHangs;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntityRef<district> _district;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    partial void Oncommune_nameChanging(string value);
    partial void Oncommune_nameChanged();
    partial void OndegreeChanging(System.Nullable<int> value);
    partial void OndegreeChanged();
    partial void Ondistrict_idChanging(string value);
    partial void Ondistrict_idChanged();
    #endregion
		
		public commune()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._district = default(EntityRef<district>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_name", DbType="NVarChar(50)")]
		public string commune_name
		{
			get
			{
				return this._commune_name;
			}
			set
			{
				if ((this._commune_name != value))
				{
					this.Oncommune_nameChanging(value);
					this.SendPropertyChanging();
					this._commune_name = value;
					this.SendPropertyChanged("commune_name");
					this.Oncommune_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degree", DbType="Int")]
		public System.Nullable<int> degree
		{
			get
			{
				return this._degree;
			}
			set
			{
				if ((this._degree != value))
				{
					this.OndegreeChanging(value);
					this.SendPropertyChanging();
					this._degree = value;
					this.SendPropertyChanged("degree");
					this.OndegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_id", DbType="NChar(5)")]
		public string district_id
		{
			get
			{
				return this._district_id;
			}
			set
			{
				if ((this._district_id != value))
				{
					if (this._district.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondistrict_idChanging(value);
					this.SendPropertyChanging();
					this._district_id = value;
					this.SendPropertyChanged("district_id");
					this.Ondistrict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_KhachHang", Storage="_KhachHangs", ThisKey="commune_id", OtherKey="commune_id")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_NhanVien", Storage="_NhanViens", ThisKey="commune_id", OtherKey="commune_id")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="district_commune", Storage="_district", ThisKey="district_id", OtherKey="district_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public district district
		{
			get
			{
				return this._district.Entity;
			}
			set
			{
				district previousValue = this._district.Entity;
				if (((previousValue != value) 
							|| (this._district.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._district.Entity = null;
						previousValue.communes.Remove(this);
					}
					this._district.Entity = value;
					if ((value != null))
					{
						value.communes.Add(this);
						this._district_id = value.district_id;
					}
					else
					{
						this._district_id = default(string);
					}
					this.SendPropertyChanged("district");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.commune = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.commune = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.commune = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.commune = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuePhong")]
	public partial class ThuePhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThuePhong;
		
		private string _MaPhong;
		
		private string _MaNV;
		
		private string _CMND;
		
		private string _NgayVao;
		
		private string _DatCoc;
		
		private EntitySet<SuDungDichVu> _SuDungDichVus;
		
		private EntitySet<ThanhToan> _ThanhToans;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThuePhongChanging(string value);
    partial void OnMaThuePhongChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnNgayVaoChanging(string value);
    partial void OnNgayVaoChanged();
    partial void OnDatCocChanging(string value);
    partial void OnDatCocChanged();
    #endregion
		
		public ThuePhong()
		{
			this._SuDungDichVus = new EntitySet<SuDungDichVu>(new Action<SuDungDichVu>(this.attach_SuDungDichVus), new Action<SuDungDichVu>(this.detach_SuDungDichVus));
			this._ThanhToans = new EntitySet<ThanhToan>(new Action<ThanhToan>(this.attach_ThanhToans), new Action<ThanhToan>(this.detach_ThanhToans));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuePhong", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThuePhong
		{
			get
			{
				return this._MaThuePhong;
			}
			set
			{
				if ((this._MaThuePhong != value))
				{
					this.OnMaThuePhongChanging(value);
					this.SendPropertyChanging();
					this._MaThuePhong = value;
					this.SendPropertyChanged("MaThuePhong");
					this.OnMaThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVao", DbType="NChar(10)")]
		public string NgayVao
		{
			get
			{
				return this._NgayVao;
			}
			set
			{
				if ((this._NgayVao != value))
				{
					this.OnNgayVaoChanging(value);
					this.SendPropertyChanging();
					this._NgayVao = value;
					this.SendPropertyChanged("NgayVao");
					this.OnNgayVaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatCoc", DbType="NChar(10)")]
		public string DatCoc
		{
			get
			{
				return this._DatCoc;
			}
			set
			{
				if ((this._DatCoc != value))
				{
					this.OnDatCocChanging(value);
					this.SendPropertyChanging();
					this._DatCoc = value;
					this.SendPropertyChanged("DatCoc");
					this.OnDatCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhong_SuDungDichVu", Storage="_SuDungDichVus", ThisKey="MaThuePhong", OtherKey="MaThuePhong")]
		public EntitySet<SuDungDichVu> SuDungDichVus
		{
			get
			{
				return this._SuDungDichVus;
			}
			set
			{
				this._SuDungDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhong_ThanhToan", Storage="_ThanhToans", ThisKey="MaThuePhong", OtherKey="MaThuePhong")]
		public EntitySet<ThanhToan> ThanhToans
		{
			get
			{
				return this._ThanhToans;
			}
			set
			{
				this._ThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ThuePhong", Storage="_KhachHang", ThisKey="CMND", OtherKey="CMND", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.ThuePhongs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.ThuePhongs.Add(this);
						this._CMND = value.CMND;
					}
					else
					{
						this._CMND = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThuePhong", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.ThuePhongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.ThuePhongs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_ThuePhong", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.ThuePhongs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.ThuePhongs.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuDungDichVus(SuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhong = this;
		}
		
		private void detach_SuDungDichVus(SuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhong = null;
		}
		
		private void attach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhong = this;
		}
		
		private void detach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.ThuePhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDV;
		
		private string _TenDV;
		
		private System.Nullable<double> _GiaTien;
		
		private string _DonViTinh;
		
		private EntitySet<SuDungDichVu> _SuDungDichVus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(string value);
    partial void OnMaDVChanged();
    partial void OnTenDVChanging(string value);
    partial void OnTenDVChanged();
    partial void OnGiaTienChanging(System.Nullable<double> value);
    partial void OnGiaTienChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    #endregion
		
		public DichVu()
		{
			this._SuDungDichVus = new EntitySet<SuDungDichVu>(new Action<SuDungDichVu>(this.attach_SuDungDichVus), new Action<SuDungDichVu>(this.detach_SuDungDichVus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDV", DbType="NVarChar(50)")]
		public string TenDV
		{
			get
			{
				return this._TenDV;
			}
			set
			{
				if ((this._TenDV != value))
				{
					this.OnTenDVChanging(value);
					this.SendPropertyChanging();
					this._TenDV = value;
					this.SendPropertyChanged("TenDV");
					this.OnTenDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Float")]
		public System.Nullable<double> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NChar(10)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_SuDungDichVu", Storage="_SuDungDichVus", ThisKey="MaDV", OtherKey="MaDV")]
		public EntitySet<SuDungDichVu> SuDungDichVus
		{
			get
			{
				return this._SuDungDichVus;
			}
			set
			{
				this._SuDungDichVus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuDungDichVus(SuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_SuDungDichVus(SuDungDichVu entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.district")]
	public partial class district : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _district_id;
		
		private string _district_name;
		
		private string _province_id;
		
		private EntitySet<commune> _communes;
		
		private EntityRef<province> _province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondistrict_idChanging(string value);
    partial void Ondistrict_idChanged();
    partial void Ondistrict_nameChanging(string value);
    partial void Ondistrict_nameChanged();
    partial void Onprovince_idChanging(string value);
    partial void Onprovince_idChanged();
    #endregion
		
		public district()
		{
			this._communes = new EntitySet<commune>(new Action<commune>(this.attach_communes), new Action<commune>(this.detach_communes));
			this._province = default(EntityRef<province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string district_id
		{
			get
			{
				return this._district_id;
			}
			set
			{
				if ((this._district_id != value))
				{
					this.Ondistrict_idChanging(value);
					this.SendPropertyChanging();
					this._district_id = value;
					this.SendPropertyChanged("district_id");
					this.Ondistrict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string district_name
		{
			get
			{
				return this._district_name;
			}
			set
			{
				if ((this._district_name != value))
				{
					this.Ondistrict_nameChanging(value);
					this.SendPropertyChanging();
					this._district_name = value;
					this.SendPropertyChanged("district_name");
					this.Ondistrict_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string province_id
		{
			get
			{
				return this._province_id;
			}
			set
			{
				if ((this._province_id != value))
				{
					if (this._province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprovince_idChanging(value);
					this.SendPropertyChanging();
					this._province_id = value;
					this.SendPropertyChanged("province_id");
					this.Onprovince_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="district_commune", Storage="_communes", ThisKey="district_id", OtherKey="district_id")]
		public EntitySet<commune> communes
		{
			get
			{
				return this._communes;
			}
			set
			{
				this._communes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="province_district", Storage="_province", ThisKey="province_id", OtherKey="province_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public province province
		{
			get
			{
				return this._province.Entity;
			}
			set
			{
				province previousValue = this._province.Entity;
				if (((previousValue != value) 
							|| (this._province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._province.Entity = null;
						previousValue.districts.Remove(this);
					}
					this._province.Entity = value;
					if ((value != null))
					{
						value.districts.Add(this);
						this._province_id = value.province_id;
					}
					else
					{
						this._province_id = default(string);
					}
					this.SendPropertyChanged("province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_communes(commune entity)
		{
			this.SendPropertyChanging();
			entity.district = this;
		}
		
		private void detach_communes(commune entity)
		{
			this.SendPropertyChanging();
			entity.district = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CMND;
		
		private string _TenKH;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private System.Nullable<bool> _Nu;
		
		private string _commune_id;
		
		private EntitySet<ThuePhong> _ThuePhongs;
		
		private EntityRef<commune> _commune;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnNuChanging(System.Nullable<bool> value);
    partial void OnNuChanged();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    #endregion
		
		public KhachHang()
		{
			this._ThuePhongs = new EntitySet<ThuePhong>(new Action<ThuePhong>(this.attach_ThuePhongs), new Action<ThuePhong>(this.detach_ThuePhongs));
			this._commune = default(EntityRef<commune>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nu", DbType="Bit")]
		public System.Nullable<bool> Nu
		{
			get
			{
				return this._Nu;
			}
			set
			{
				if ((this._Nu != value))
				{
					this.OnNuChanging(value);
					this.SendPropertyChanging();
					this._Nu = value;
					this.SendPropertyChanged("Nu");
					this.OnNuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5)")]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					if (this._commune.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_ThuePhong", Storage="_ThuePhongs", ThisKey="CMND", OtherKey="CMND")]
		public EntitySet<ThuePhong> ThuePhongs
		{
			get
			{
				return this._ThuePhongs;
			}
			set
			{
				this._ThuePhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_KhachHang", Storage="_commune", ThisKey="commune_id", OtherKey="commune_id", IsForeignKey=true)]
		public commune commune
		{
			get
			{
				return this._commune.Entity;
			}
			set
			{
				commune previousValue = this._commune.Entity;
				if (((previousValue != value) 
							|| (this._commune.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commune.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._commune.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._commune_id = value.commune_id;
					}
					else
					{
						this._commune_id = default(string);
					}
					this.SendPropertyChanged("commune");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThuePhongs(ThuePhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_ThuePhongs(ThuePhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _DiaChi;
		
		private System.Nullable<bool> _Nu;
		
		private string _commune_id;
		
		private EntitySet<ThuePhong> _ThuePhongs;
		
		private EntityRef<commune> _commune;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNuChanging(System.Nullable<bool> value);
    partial void OnNuChanged();
    partial void Oncommune_idChanging(string value);
    partial void Oncommune_idChanged();
    #endregion
		
		public NhanVien()
		{
			this._ThuePhongs = new EntitySet<ThuePhong>(new Action<ThuePhong>(this.attach_ThuePhongs), new Action<ThuePhong>(this.detach_ThuePhongs));
			this._commune = default(EntityRef<commune>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nu", DbType="Bit")]
		public System.Nullable<bool> Nu
		{
			get
			{
				return this._Nu;
			}
			set
			{
				if ((this._Nu != value))
				{
					this.OnNuChanging(value);
					this.SendPropertyChanging();
					this._Nu = value;
					this.SendPropertyChanged("Nu");
					this.OnNuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commune_id", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string commune_id
		{
			get
			{
				return this._commune_id;
			}
			set
			{
				if ((this._commune_id != value))
				{
					if (this._commune.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncommune_idChanging(value);
					this.SendPropertyChanging();
					this._commune_id = value;
					this.SendPropertyChanged("commune_id");
					this.Oncommune_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThuePhong", Storage="_ThuePhongs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<ThuePhong> ThuePhongs
		{
			get
			{
				return this._ThuePhongs;
			}
			set
			{
				this._ThuePhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commune_NhanVien", Storage="_commune", ThisKey="commune_id", OtherKey="commune_id", IsForeignKey=true)]
		public commune commune
		{
			get
			{
				return this._commune.Entity;
			}
			set
			{
				commune previousValue = this._commune.Entity;
				if (((previousValue != value) 
							|| (this._commune.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commune.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._commune.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._commune_id = value.commune_id;
					}
					else
					{
						this._commune_id = default(string);
					}
					this.SendPropertyChanged("commune");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThuePhongs(ThuePhong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_ThuePhongs(ThuePhong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _MaLoai;
		
		private System.Nullable<bool> _TrangThai;
		
		private string _GhiChu;
		
		private string _DienTich;
		
		private System.Nullable<double> _GiaThue;
		
		private System.Nullable<int> _SoGiuong;
		
		private EntitySet<ThuePhong> _ThuePhongs;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDienTichChanging(string value);
    partial void OnDienTichChanged();
    partial void OnGiaThueChanging(System.Nullable<double> value);
    partial void OnGiaThueChanged();
    partial void OnSoGiuongChanging(System.Nullable<int> value);
    partial void OnSoGiuongChanged();
    #endregion
		
		public Phong()
		{
			this._ThuePhongs = new EntitySet<ThuePhong>(new Action<ThuePhong>(this.attach_ThuePhongs), new Action<ThuePhong>(this.detach_ThuePhongs));
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienTich", DbType="NVarChar(50)")]
		public string DienTich
		{
			get
			{
				return this._DienTich;
			}
			set
			{
				if ((this._DienTich != value))
				{
					this.OnDienTichChanging(value);
					this.SendPropertyChanging();
					this._DienTich = value;
					this.SendPropertyChanged("DienTich");
					this.OnDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaThue", DbType="Float")]
		public System.Nullable<double> GiaThue
		{
			get
			{
				return this._GiaThue;
			}
			set
			{
				if ((this._GiaThue != value))
				{
					this.OnGiaThueChanging(value);
					this.SendPropertyChanging();
					this._GiaThue = value;
					this.SendPropertyChanged("GiaThue");
					this.OnGiaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGiuong", DbType="Int")]
		public System.Nullable<int> SoGiuong
		{
			get
			{
				return this._SoGiuong;
			}
			set
			{
				if ((this._SoGiuong != value))
				{
					this.OnSoGiuongChanging(value);
					this.SendPropertyChanging();
					this._SoGiuong = value;
					this.SendPropertyChanged("SoGiuong");
					this.OnSoGiuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_ThuePhong", Storage="_ThuePhongs", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<ThuePhong> ThuePhongs
		{
			get
			{
				return this._ThuePhongs;
			}
			set
			{
				this._ThuePhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThuePhongs(ThuePhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_ThuePhongs(ThuePhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.province")]
	public partial class province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _province_id;
		
		private string _province_name;
		
		private EntitySet<district> _districts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprovince_idChanging(string value);
    partial void Onprovince_idChanged();
    partial void Onprovince_nameChanging(string value);
    partial void Onprovince_nameChanged();
    #endregion
		
		public province()
		{
			this._districts = new EntitySet<district>(new Action<district>(this.attach_districts), new Action<district>(this.detach_districts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string province_id
		{
			get
			{
				return this._province_id;
			}
			set
			{
				if ((this._province_id != value))
				{
					this.Onprovince_idChanging(value);
					this.SendPropertyChanging();
					this._province_id = value;
					this.SendPropertyChanged("province_id");
					this.Onprovince_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string province_name
		{
			get
			{
				return this._province_name;
			}
			set
			{
				if ((this._province_name != value))
				{
					this.Onprovince_nameChanging(value);
					this.SendPropertyChanging();
					this._province_name = value;
					this.SendPropertyChanged("province_name");
					this.Onprovince_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="province_district", Storage="_districts", ThisKey="province_id", OtherKey="province_id")]
		public EntitySet<district> districts
		{
			get
			{
				return this._districts;
			}
			set
			{
				this._districts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_districts(district entity)
		{
			this.SendPropertyChanging();
			entity.province = this;
		}
		
		private void detach_districts(district entity)
		{
			this.SendPropertyChanging();
			entity.province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuDungDichVu")]
	public partial class SuDungDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _MaDV;
		
		private string _MaThuePhong;
		
		private System.Nullable<System.DateTime> _NgaySuDung;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<DichVu> _DichVu;
		
		private EntityRef<ThuePhong> _ThuePhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMaDVChanging(string value);
    partial void OnMaDVChanged();
    partial void OnMaThuePhongChanging(string value);
    partial void OnMaThuePhongChanged();
    partial void OnNgaySuDungChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySuDungChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public SuDungDichVu()
		{
			this._DichVu = default(EntityRef<DichVu>);
			this._ThuePhong = default(EntityRef<ThuePhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuePhong", DbType="NChar(10)")]
		public string MaThuePhong
		{
			get
			{
				return this._MaThuePhong;
			}
			set
			{
				if ((this._MaThuePhong != value))
				{
					if (this._ThuePhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThuePhongChanging(value);
					this.SendPropertyChanging();
					this._MaThuePhong = value;
					this.SendPropertyChanged("MaThuePhong");
					this.OnMaThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySuDung", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySuDung
		{
			get
			{
				return this._NgaySuDung;
			}
			set
			{
				if ((this._NgaySuDung != value))
				{
					this.OnNgaySuDungChanging(value);
					this.SendPropertyChanging();
					this._NgaySuDung = value;
					this.SendPropertyChanged("NgaySuDung");
					this.OnNgaySuDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_SuDungDichVu", Storage="_DichVu", ThisKey="MaDV", OtherKey="MaDV", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.SuDungDichVus.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.SuDungDichVus.Add(this);
						this._MaDV = value.MaDV;
					}
					else
					{
						this._MaDV = default(string);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhong_SuDungDichVu", Storage="_ThuePhong", ThisKey="MaThuePhong", OtherKey="MaThuePhong", IsForeignKey=true)]
		public ThuePhong ThuePhong
		{
			get
			{
				return this._ThuePhong.Entity;
			}
			set
			{
				ThuePhong previousValue = this._ThuePhong.Entity;
				if (((previousValue != value) 
							|| (this._ThuePhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuePhong.Entity = null;
						previousValue.SuDungDichVus.Remove(this);
					}
					this._ThuePhong.Entity = value;
					if ((value != null))
					{
						value.SuDungDichVus.Add(this);
						this._MaThuePhong = value.MaThuePhong;
					}
					else
					{
						this._MaThuePhong = default(string);
					}
					this.SendPropertyChanged("ThuePhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThanhToan;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private string _MaThuePhong;
		
		private string _MaNV;
		
		private System.Nullable<System.DateTime> _NgayVao;
		
		private EntityRef<ThuePhong> _ThuePhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThanhToanChanging(string value);
    partial void OnMaThanhToanChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    partial void OnMaThuePhongChanging(string value);
    partial void OnMaThuePhongChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayVaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVaoChanged();
    #endregion
		
		public ThanhToan()
		{
			this._ThuePhong = default(EntityRef<ThuePhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThanhToan
		{
			get
			{
				return this._MaThanhToan;
			}
			set
			{
				if ((this._MaThanhToan != value))
				{
					this.OnMaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._MaThanhToan = value;
					this.SendPropertyChanged("MaThanhToan");
					this.OnMaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Money")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuePhong", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaThuePhong
		{
			get
			{
				return this._MaThuePhong;
			}
			set
			{
				if ((this._MaThuePhong != value))
				{
					if (this._ThuePhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThuePhongChanging(value);
					this.SendPropertyChanging();
					this._MaThuePhong = value;
					this.SendPropertyChanged("MaThuePhong");
					this.OnMaThuePhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayVao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayVao
		{
			get
			{
				return this._NgayVao;
			}
			set
			{
				if ((this._NgayVao != value))
				{
					this.OnNgayVaoChanging(value);
					this.SendPropertyChanging();
					this._NgayVao = value;
					this.SendPropertyChanged("NgayVao");
					this.OnNgayVaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuePhong_ThanhToan", Storage="_ThuePhong", ThisKey="MaThuePhong", OtherKey="MaThuePhong", IsForeignKey=true)]
		public ThuePhong ThuePhong
		{
			get
			{
				return this._ThuePhong.Entity;
			}
			set
			{
				ThuePhong previousValue = this._ThuePhong.Entity;
				if (((previousValue != value) 
							|| (this._ThuePhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuePhong.Entity = null;
						previousValue.ThanhToans.Remove(this);
					}
					this._ThuePhong.Entity = value;
					if ((value != null))
					{
						value.ThanhToans.Add(this);
						this._MaThuePhong = value.MaThuePhong;
					}
					else
					{
						this._MaThuePhong = default(string);
					}
					this.SendPropertyChanged("ThuePhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
